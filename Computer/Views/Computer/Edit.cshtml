@model Computer.Application.Computer.Commands.EditComputer.EditComputerCommand

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit @Model.Name</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group m-3">
                <label asp-for="Producer" class="control-label"></label>
                <input asp-for="Producer" class="form-control" />
                <span asp-validation-for="Producer" class="text-danger"></span>
            </div>
            <div class="form-group m-3">
                <label asp-for="CPU" class="control-label"></label>
                <input asp-for="CPU" class="form-control" />
                <span asp-validation-for="CPU" class="text-danger"></span>
            </div>
            <div class="form-group m-3">
                <label asp-for="Memory" class="control-label"></label>
                <input asp-for="Memory" class="form-control" />
                <span asp-validation-for="Memory" class="text-danger"></span>
            </div>
            <div class="form-group m-3">
                <label asp-for="GPU" class="control-label"></label>
                <input asp-for="GPU" class="form-control" />
                <span asp-validation-for="GPU" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
